1.1.5
-----

Fulcro integration tuning:

* Reduced logging noise
* Added 4-arity version in the lambda execution model, so event-name and event-data are available in expressions as args 3 and 4 respectively.
* Changed Fulcro integration to use the 4-arg version of lambda (default is still 2-arg in non-Fulcro, for bw compat in CLJ)
* Added auto-expansion of fulcro aliases into the `data` arg (2) of the expressions, again for convenience. A warning will show in dev time if there are conflicts on keys.

1.0.0-alpha8

MAJOR REFACTORING AND CLEANUP. SEVERAL BREAKING CHANGES.

* Renamed top-level statechart definition function `state-machine/machine` to `chart/statechart`
* Renamed `state-machine` ns to `chart`.
* Changed signature of a number of protocol methods to facilitate support for invocations in a self-running system
* The simple namespace changed significantly in order to provide a one-shot local statechart runtime
* Removed functions from `environment` that should not have been public
* Updated examples and tests
* Added working memory store and statechart registry protocols and basic implementations
* Added invocation processors for statecharts and futures
* Updated documentation

1.0.0-alpha7

* Elements now support children as nested sequences (helps when making convenience helpers)
* Added convenience helpers/macros to make charts clearer

1.0.0-alpha6

Various refinements

* Remove the event from data model after processing it.
* Added warning to scoped data model. Not recommended after trying it in real world.
* Changed default memory model in the simple wrapper to flat (POSSIBLE BREAKING CHANGE)
* Refined the event queue protocol: handler now receives 2 arguments (BREAKING CHANGE)
* Updated env generator to build a full runtime env, usable with protocols directly
* Updated supplied event queue implementations to follow protocol change
* Fixed spec for event type
* Bug: process-event! advertised it would accept an event name, but failed when given one.

1.0.0-alpha3

* Various documentation updates
* MINOR API (breaking) change: delete op for data model now takes varargs instead of sequence.
* Improved validation
* Added is-in-state? (In) predicates to environment ns
* Added Flat working memory data model (no scoping)
* Fixed processing of send nodes so that `delay` `type` and `target` can be expressions
  for the execution model. You can still use `delayexpr` and such to differentiate if
  necessary.

1.0.0-alpha2

* Renamed protocol DataModel/transact! to `update!`, and changed argument to take :ops instead of :txn key.
* API for send changed slightly. :event is now just a name, and :data is for the extra data.

1.0.0-alpha1

* First release, NOT API stabel
